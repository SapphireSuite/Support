# Copyright (c) 2022 Sapphire's Suite. All Rights Reserved.

name: Windows

# Trigger the action.
on:
  push:
    branches:
      - main
      - master
      - dev
      - dev_*
      - '!dev_osx'
      - '!dev_macos'
      - '!dev_unix'


# Settings common to all jobs.
defaults:
  run:
    shell: bash


# Variables common to all jobs.
env:
  CMAKE_OPTIONS: '-DSA_CI=1 -DSA_SUPPORT_BUILD_TESTS_OPT=ON'


# Job matrix
jobs:

  MSVC_2017:
    runs-on: windows-2016
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ env.CMAKE_OPTIONS }} -G "Visual Studio 15 2017" -A x64
      - name: Build Project
        run: cmake --build Build --config ${{ matrix.config }} --verbose
      - name: Run CTests
        run: cd Build && ctest -C ${{ matrix.config }} -V


  MSVC_2019:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ env.CMAKE_OPTIONS }} -G "Visual Studio 16 2019" -A x64
      - name: Build Project
        run: cmake --build Build --config ${{ matrix.config }} --verbose
      - name: Run CTests
        run: cd Build && ctest -C ${{ matrix.config }} -V


  MSVC_2022:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ env.CMAKE_OPTIONS }} -G "Visual Studio 17 2022" -A x64
      - name: Build Project
        run: cmake --build Build --config ${{ matrix.config }} --verbose
      - name: Run CTests
        run: cd Build && ctest -C ${{ matrix.config }} -V


  ClangCL:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ env.CMAKE_OPTIONS }} -G "Visual Studio 17 2022" -A x64 -T ClangCL
      - name: Build Project
        run: cmake --build Build --config ${{ matrix.config }} --verbose
      - name: Run CTests
        run: cd Build && ctest -C ${{ matrix.config }} -V


  Clang:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@master # Install Ninja.
      - name: "[Command] Install LLVM & Clang"
        run: |
            echo "CC=C:/Program Files/LLVM/bin/clang" >> $GITHUB_ENV
            echo "CXX=C:/Program Files/LLVM/bin/clang++" >> $GITHUB_ENV
      - name: Generate Project
        run: cmake -B Build -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ env.CMAKE_OPTIONS }} -G Ninja
      - name: Build Project
        run: cmake --build Build --config ${{ matrix.config }} --verbose
      - name: Run CTests
        run: cd Build && ctest -C ${{ matrix.config }} -V
